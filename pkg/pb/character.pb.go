// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.21.12
// source: sro/character/character.proto

package pb

import (
	pb "github.com/ShatteredRealms/go-common-service/pkg/pb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCharacterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Gender        string                 `protobuf:"bytes,3,opt,name=gender,proto3" json:"gender,omitempty"`
	Realm         string                 `protobuf:"bytes,4,opt,name=realm,proto3" json:"realm,omitempty"`
	DimensionId   string                 `protobuf:"bytes,5,opt,name=dimension_id,json=dimensionId,proto3" json:"dimension_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCharacterRequest) Reset() {
	*x = CreateCharacterRequest{}
	mi := &file_sro_character_character_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCharacterRequest) ProtoMessage() {}

func (x *CreateCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCharacterRequest.ProtoReflect.Descriptor instead.
func (*CreateCharacterRequest) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCharacterRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateCharacterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCharacterRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CreateCharacterRequest) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *CreateCharacterRequest) GetDimensionId() string {
	if x != nil {
		return x.DimensionId
	}
	return ""
}

type CharacterDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   string                 `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	OwnerId       string                 `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Gender        string                 `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Realm         string                 `protobuf:"bytes,5,opt,name=realm,proto3" json:"realm,omitempty"`
	PlayTime      uint64                 `protobuf:"varint,6,opt,name=play_time,json=playTime,proto3" json:"play_time,omitempty"`
	Location      *pb.Location           `protobuf:"bytes,8,opt,name=location,proto3" json:"location,omitempty"`
	DimensionId   string                 `protobuf:"bytes,9,opt,name=dimension_id,json=dimensionId,proto3" json:"dimension_id,omitempty"`
	CreatedAt     uint64                 `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharacterDetails) Reset() {
	*x = CharacterDetails{}
	mi := &file_sro_character_character_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterDetails) ProtoMessage() {}

func (x *CharacterDetails) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterDetails.ProtoReflect.Descriptor instead.
func (*CharacterDetails) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{1}
}

func (x *CharacterDetails) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *CharacterDetails) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CharacterDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterDetails) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CharacterDetails) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *CharacterDetails) GetPlayTime() uint64 {
	if x != nil {
		return x.PlayTime
	}
	return 0
}

func (x *CharacterDetails) GetLocation() *pb.Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *CharacterDetails) GetDimensionId() string {
	if x != nil {
		return x.DimensionId
	}
	return ""
}

func (x *CharacterDetails) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type CharactersDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Characters    []*CharacterDetails    `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharactersDetails) Reset() {
	*x = CharactersDetails{}
	mi := &file_sro_character_character_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharactersDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharactersDetails) ProtoMessage() {}

func (x *CharactersDetails) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharactersDetails.ProtoReflect.Descriptor instead.
func (*CharactersDetails) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{2}
}

func (x *CharactersDetails) GetCharacters() []*CharacterDetails {
	if x != nil {
		return x.Characters
	}
	return nil
}

type EditCharacterRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	CharacterId string                 `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	// The user id that owns the character
	//
	// Types that are valid to be assigned to OptionalOwnerId:
	//
	//	*EditCharacterRequest_OwnerId
	OptionalOwnerId isEditCharacterRequest_OptionalOwnerId `protobuf_oneof:"optional_owner_id"`
	// Types that are valid to be assigned to OptionalNewName:
	//
	//	*EditCharacterRequest_NewName
	OptionalNewName isEditCharacterRequest_OptionalNewName `protobuf_oneof:"optional_new_name"`
	// Types that are valid to be assigned to OptionalGender:
	//
	//	*EditCharacterRequest_Gender
	OptionalGender isEditCharacterRequest_OptionalGender `protobuf_oneof:"optional_gender"`
	// Types that are valid to be assigned to OptionalRealm:
	//
	//	*EditCharacterRequest_Realm
	OptionalRealm isEditCharacterRequest_OptionalRealm `protobuf_oneof:"optional_realm"`
	// Types that are valid to be assigned to OptionalPlayTime:
	//
	//	*EditCharacterRequest_PlayTime
	OptionalPlayTime isEditCharacterRequest_OptionalPlayTime `protobuf_oneof:"optional_play_time"`
	// Types that are valid to be assigned to OptionalLocation:
	//
	//	*EditCharacterRequest_Location
	OptionalLocation isEditCharacterRequest_OptionalLocation `protobuf_oneof:"optional_location"`
	// Types that are valid to be assigned to OptionalDimension:
	//
	//	*EditCharacterRequest_DimensionId
	OptionalDimension isEditCharacterRequest_OptionalDimension `protobuf_oneof:"optional_dimension"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *EditCharacterRequest) Reset() {
	*x = EditCharacterRequest{}
	mi := &file_sro_character_character_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCharacterRequest) ProtoMessage() {}

func (x *EditCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCharacterRequest.ProtoReflect.Descriptor instead.
func (*EditCharacterRequest) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{3}
}

func (x *EditCharacterRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *EditCharacterRequest) GetOptionalOwnerId() isEditCharacterRequest_OptionalOwnerId {
	if x != nil {
		return x.OptionalOwnerId
	}
	return nil
}

func (x *EditCharacterRequest) GetOwnerId() string {
	if x != nil {
		if x, ok := x.OptionalOwnerId.(*EditCharacterRequest_OwnerId); ok {
			return x.OwnerId
		}
	}
	return ""
}

func (x *EditCharacterRequest) GetOptionalNewName() isEditCharacterRequest_OptionalNewName {
	if x != nil {
		return x.OptionalNewName
	}
	return nil
}

func (x *EditCharacterRequest) GetNewName() string {
	if x != nil {
		if x, ok := x.OptionalNewName.(*EditCharacterRequest_NewName); ok {
			return x.NewName
		}
	}
	return ""
}

func (x *EditCharacterRequest) GetOptionalGender() isEditCharacterRequest_OptionalGender {
	if x != nil {
		return x.OptionalGender
	}
	return nil
}

func (x *EditCharacterRequest) GetGender() string {
	if x != nil {
		if x, ok := x.OptionalGender.(*EditCharacterRequest_Gender); ok {
			return x.Gender
		}
	}
	return ""
}

func (x *EditCharacterRequest) GetOptionalRealm() isEditCharacterRequest_OptionalRealm {
	if x != nil {
		return x.OptionalRealm
	}
	return nil
}

func (x *EditCharacterRequest) GetRealm() string {
	if x != nil {
		if x, ok := x.OptionalRealm.(*EditCharacterRequest_Realm); ok {
			return x.Realm
		}
	}
	return ""
}

func (x *EditCharacterRequest) GetOptionalPlayTime() isEditCharacterRequest_OptionalPlayTime {
	if x != nil {
		return x.OptionalPlayTime
	}
	return nil
}

func (x *EditCharacterRequest) GetPlayTime() uint64 {
	if x != nil {
		if x, ok := x.OptionalPlayTime.(*EditCharacterRequest_PlayTime); ok {
			return x.PlayTime
		}
	}
	return 0
}

func (x *EditCharacterRequest) GetOptionalLocation() isEditCharacterRequest_OptionalLocation {
	if x != nil {
		return x.OptionalLocation
	}
	return nil
}

func (x *EditCharacterRequest) GetLocation() *pb.Location {
	if x != nil {
		if x, ok := x.OptionalLocation.(*EditCharacterRequest_Location); ok {
			return x.Location
		}
	}
	return nil
}

func (x *EditCharacterRequest) GetOptionalDimension() isEditCharacterRequest_OptionalDimension {
	if x != nil {
		return x.OptionalDimension
	}
	return nil
}

func (x *EditCharacterRequest) GetDimensionId() string {
	if x != nil {
		if x, ok := x.OptionalDimension.(*EditCharacterRequest_DimensionId); ok {
			return x.DimensionId
		}
	}
	return ""
}

type isEditCharacterRequest_OptionalOwnerId interface {
	isEditCharacterRequest_OptionalOwnerId()
}

type EditCharacterRequest_OwnerId struct {
	OwnerId string `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3,oneof"`
}

func (*EditCharacterRequest_OwnerId) isEditCharacterRequest_OptionalOwnerId() {}

type isEditCharacterRequest_OptionalNewName interface {
	isEditCharacterRequest_OptionalNewName()
}

type EditCharacterRequest_NewName struct {
	NewName string `protobuf:"bytes,4,opt,name=new_name,json=newName,proto3,oneof"`
}

func (*EditCharacterRequest_NewName) isEditCharacterRequest_OptionalNewName() {}

type isEditCharacterRequest_OptionalGender interface {
	isEditCharacterRequest_OptionalGender()
}

type EditCharacterRequest_Gender struct {
	Gender string `protobuf:"bytes,5,opt,name=gender,proto3,oneof"`
}

func (*EditCharacterRequest_Gender) isEditCharacterRequest_OptionalGender() {}

type isEditCharacterRequest_OptionalRealm interface {
	isEditCharacterRequest_OptionalRealm()
}

type EditCharacterRequest_Realm struct {
	Realm string `protobuf:"bytes,6,opt,name=realm,proto3,oneof"`
}

func (*EditCharacterRequest_Realm) isEditCharacterRequest_OptionalRealm() {}

type isEditCharacterRequest_OptionalPlayTime interface {
	isEditCharacterRequest_OptionalPlayTime()
}

type EditCharacterRequest_PlayTime struct {
	PlayTime uint64 `protobuf:"varint,7,opt,name=play_time,json=playTime,proto3,oneof"`
}

func (*EditCharacterRequest_PlayTime) isEditCharacterRequest_OptionalPlayTime() {}

type isEditCharacterRequest_OptionalLocation interface {
	isEditCharacterRequest_OptionalLocation()
}

type EditCharacterRequest_Location struct {
	Location *pb.Location `protobuf:"bytes,8,opt,name=location,proto3,oneof"`
}

func (*EditCharacterRequest_Location) isEditCharacterRequest_OptionalLocation() {}

type isEditCharacterRequest_OptionalDimension interface {
	isEditCharacterRequest_OptionalDimension()
}

type EditCharacterRequest_DimensionId struct {
	DimensionId string `protobuf:"bytes,9,opt,name=dimension_id,json=dimensionId,proto3,oneof"`
}

func (*EditCharacterRequest_DimensionId) isEditCharacterRequest_OptionalDimension() {}

type PlayTimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Time          uint64                 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayTimeResponse) Reset() {
	*x = PlayTimeResponse{}
	mi := &file_sro_character_character_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayTimeResponse) ProtoMessage() {}

func (x *PlayTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayTimeResponse.ProtoReflect.Descriptor instead.
func (*PlayTimeResponse) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{4}
}

func (x *PlayTimeResponse) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type AddPlayTimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   string                 `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Time          uint64                 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPlayTimeRequest) Reset() {
	*x = AddPlayTimeRequest{}
	mi := &file_sro_character_character_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPlayTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPlayTimeRequest) ProtoMessage() {}

func (x *AddPlayTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sro_character_character_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPlayTimeRequest.ProtoReflect.Descriptor instead.
func (*AddPlayTimeRequest) Descriptor() ([]byte, []int) {
	return file_sro_character_character_proto_rawDescGZIP(), []int{5}
}

func (x *AddPlayTimeRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *AddPlayTimeRequest) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_sro_character_character_proto protoreflect.FileDescriptor

var file_sro_character_character_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x72, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2f,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x73, 0x72, 0x6f, 0x2f, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x01, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x65, 0x61, 0x6c, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x9c, 0x02, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x72,
	0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x54, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x22, 0xa6, 0x03, 0x0a,
	0x14, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x05,
	0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x72,
	0x65, 0x61, 0x6c, 0x6d, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x48, 0x04, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0c, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x0b, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a, 0x11, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x11, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x42, 0x10, 0x0a, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x61, 0x6c, 0x6d, 0x42, 0x14, 0x0a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x14, 0x0a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x4b, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x32, 0xa9, 0x06, 0x0a, 0x10, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x5e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12,
	0x0d, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x1f,
	0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x61, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x6a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x73, 0x72, 0x6f,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x20, 0x2e, 0x73, 0x72, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x2f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x74,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x12, 0x25, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x58, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x82,
	0x01, 0x0a, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x12, 0x23, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01,
	0x2a, 0x1a, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x2f, 0x69, 0x64, 0x2f, 0x7b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x90, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x2e, 0x73,
	0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64,
	0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x72, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x1a, 0x29, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x69, 0x64, 0x2f, 0x7b,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x6c,
	0x61, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x68, 0x61, 0x74, 0x74, 0x65, 0x72, 0x65, 0x64, 0x52, 0x65,
	0x61, 0x6c, 0x6d, 0x73, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sro_character_character_proto_rawDescOnce sync.Once
	file_sro_character_character_proto_rawDescData = file_sro_character_character_proto_rawDesc
)

func file_sro_character_character_proto_rawDescGZIP() []byte {
	file_sro_character_character_proto_rawDescOnce.Do(func() {
		file_sro_character_character_proto_rawDescData = protoimpl.X.CompressGZIP(file_sro_character_character_proto_rawDescData)
	})
	return file_sro_character_character_proto_rawDescData
}

var file_sro_character_character_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_sro_character_character_proto_goTypes = []any{
	(*CreateCharacterRequest)(nil), // 0: sro.character.CreateCharacterRequest
	(*CharacterDetails)(nil),       // 1: sro.character.CharacterDetails
	(*CharactersDetails)(nil),      // 2: sro.character.CharactersDetails
	(*EditCharacterRequest)(nil),   // 3: sro.character.EditCharacterRequest
	(*PlayTimeResponse)(nil),       // 4: sro.character.PlayTimeResponse
	(*AddPlayTimeRequest)(nil),     // 5: sro.character.AddPlayTimeRequest
	(*pb.Location)(nil),            // 6: sro.Location
	(*pb.TargetId)(nil),            // 7: sro.TargetId
	(*emptypb.Empty)(nil),          // 8: google.protobuf.Empty
}
var file_sro_character_character_proto_depIdxs = []int32{
	6,  // 0: sro.character.CharacterDetails.location:type_name -> sro.Location
	1,  // 1: sro.character.CharactersDetails.characters:type_name -> sro.character.CharacterDetails
	6,  // 2: sro.character.EditCharacterRequest.location:type_name -> sro.Location
	7,  // 3: sro.character.CharacterService.GetCharacter:input_type -> sro.TargetId
	8,  // 4: sro.character.CharacterService.GetCharacters:input_type -> google.protobuf.Empty
	7,  // 5: sro.character.CharacterService.GetCharactersForUser:input_type -> sro.TargetId
	0,  // 6: sro.character.CharacterService.CreateCharacter:input_type -> sro.character.CreateCharacterRequest
	7,  // 7: sro.character.CharacterService.DeleteCharacter:input_type -> sro.TargetId
	3,  // 8: sro.character.CharacterService.EditCharacter:input_type -> sro.character.EditCharacterRequest
	5,  // 9: sro.character.CharacterService.AddCharacterPlayTime:input_type -> sro.character.AddPlayTimeRequest
	1,  // 10: sro.character.CharacterService.GetCharacter:output_type -> sro.character.CharacterDetails
	2,  // 11: sro.character.CharacterService.GetCharacters:output_type -> sro.character.CharactersDetails
	2,  // 12: sro.character.CharacterService.GetCharactersForUser:output_type -> sro.character.CharactersDetails
	1,  // 13: sro.character.CharacterService.CreateCharacter:output_type -> sro.character.CharacterDetails
	8,  // 14: sro.character.CharacterService.DeleteCharacter:output_type -> google.protobuf.Empty
	1,  // 15: sro.character.CharacterService.EditCharacter:output_type -> sro.character.CharacterDetails
	4,  // 16: sro.character.CharacterService.AddCharacterPlayTime:output_type -> sro.character.PlayTimeResponse
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_sro_character_character_proto_init() }
func file_sro_character_character_proto_init() {
	if File_sro_character_character_proto != nil {
		return
	}
	file_sro_character_character_proto_msgTypes[3].OneofWrappers = []any{
		(*EditCharacterRequest_OwnerId)(nil),
		(*EditCharacterRequest_NewName)(nil),
		(*EditCharacterRequest_Gender)(nil),
		(*EditCharacterRequest_Realm)(nil),
		(*EditCharacterRequest_PlayTime)(nil),
		(*EditCharacterRequest_Location)(nil),
		(*EditCharacterRequest_DimensionId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sro_character_character_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sro_character_character_proto_goTypes,
		DependencyIndexes: file_sro_character_character_proto_depIdxs,
		MessageInfos:      file_sro_character_character_proto_msgTypes,
	}.Build()
	File_sro_character_character_proto = out.File
	file_sro_character_character_proto_rawDesc = nil
	file_sro_character_character_proto_goTypes = nil
	file_sro_character_character_proto_depIdxs = nil
}
